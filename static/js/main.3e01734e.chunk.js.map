{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","protoTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","string","About","NotFound","App","context_Provider","layouts_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e01734e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state, \n                contacts: state.contacts.map(\n                    contact =>\n                        contact.id === action.payload.id \n                        ? (contact = action.payload)\n                        : contact\n                )\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [], \n        dispatch: action => {\n            this.setState(state => reducer(state, action));\n          }\n    };\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({ contacts: res.data })\n    };\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch(e){\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  };\n\n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const { showContactInfo} = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>{name} \n                <i onClick={()=>\n                  this.setState({\n                    showContactInfo: !this.state.showContactInfo\n                  })\n                } \n                className=\"fas fa-sort-down\"\n                style={{ cursor: 'pointer'}} />\n                <i \n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right',\n                  color: 'red'}}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)} />\n                  <Link to={`contact/edit/${id}`}>\n                    <i className=\"fas fa-pencil-alt\"\n                      style={{ \n                        cursor: 'pointer',\n                        float: 'right',\n                        color: 'black',\n                        marginRight: '1rem'\n                        }} />\n                  </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ): null}\n              \n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.protoTypes = {\n  contact: PropTypes.object.isRequired      \n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                            <span\n                            className=\"text-danger\">Contact</span> List\n                        </h1>\n                        { contacts.map(contact =>(\n                                <Contact key={contact.id} \n                                contact={contact} \n                                />\n                        ))} \n                        </React.Fragment> \n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n                type={type}\n                name={name}\n                className={\n                    classnames(\n                        'form-control form-control-lg', {'is-invalid': error}\n                    )\n                } \n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            { error && <div className=\"invalid-feedback\">{error}</div>\n            }\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text',\n    error: ''\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {} \n    };\n\n    onChange = e => this.setState({ \n      // e.target.name references the name \n      // attribute of each input type\n      [e.target.name]: e.target.value\n    });\n\n    onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const {name, email, phone} = this.state;\n      // check for errors\n\n      if(name === '') {\n        this.setState({ errors: { name: 'Name is required' }});\n        return;\n      }\n\n      if(email === '') {\n        this.setState({ errors: { email: 'Email address is required' }});\n        return;\n      }\n\n      if(phone === '') {\n        this.setState({ errors: { phone: 'Phone number is required' }});\n        return;\n      }\n\n      const newContact = {\n        name,\n        email,\n        phone\n      }\n      \n     const  res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n      dispatch({type: 'ADD_CONTACT', payload: res.data });                  \n      \n      // Clear state\n      this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {} \n      });\n\n      this.props.history.push('/');\n    };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        { value => {\n          const  { dispatch} = value;\n          return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header\">\n                  Add Contact \n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup \n                          label=\"Name\"\n                          name=\"name\"\n                          placeholder=\"Enter Name\"\n                          value={name}\n                          onChange={this.onChange}\n                          error={errors.name}\n                        />\n                        <TextInputGroup \n                          label=\"Email\"\n                          name=\"email\"\n                          placeholder=\"Enter email address\"\n                          type=\"email\"\n                          value={email}\n                          onChange={this.onChange}\n                          error={errors.email}\n                        />\n                        <TextInputGroup \n                          label=\"Phone\"\n                          name=\"phone\"\n                          placeholder=\"Enter phone number\"\n                          type=\"phone\"\n                          value={phone}\n                          onChange={this.onChange}\n                          error={errors.phone}\n                        />\n                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                    </form>\n                </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {} \n    };\n\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        \n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = e => this.setState({ \n      // e.target.name references the name \n      // attribute of each input type\n      [e.target.name]: e.target.value\n    });\n\n    onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const {name, email, phone} = this.state;\n\n      // check for errors\n      if(name === '') {\n        this.setState({ errors: { name: 'Name is required' }});\n        return;\n      }\n\n      if(email === '') {\n        this.setState({ errors: { email: 'Email address is required' }});\n        return;\n      }\n\n      if(phone === '') {\n        this.setState({ errors: { phone: 'Phone number is required' }});\n        return;\n      }\n\n      const updateContact = {\n        name,\n        email,\n        phone\n      }\n      const { id } = this.props.match.params;\n\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n      \n      // Clear state\n      this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {} \n      });\n\n      this.props.history.push('/');\n    };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        { value => {\n          const  { dispatch} = value;\n          return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header\">\n                  Update Contact \n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup \n                          label=\"Name\"\n                          name=\"name\"\n                          placeholder=\"Enter Name\"\n                          value={name}\n                          onChange={this.onChange}\n                          error={errors.name}\n                        />\n                        <TextInputGroup \n                          label=\"Email\"\n                          name=\"email\"\n                          placeholder=\"Enter email address\"\n                          type=\"email\"\n                          value={email}\n                          onChange={this.onChange}\n                          error={errors.email}\n                        />\n                        <TextInputGroup \n                          label=\"Phone\"\n                          name=\"phone\"\n                          placeholder=\"Enter phone number\"\n                          type=\"phone\"\n                          value={phone}\n                          onChange={this.onChange}\n                          error={errors.phone}\n                        />\n                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                    </form>\n                </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const {branding} = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm \n    navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">\n                {branding}\n            </a>\n        \n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\"></i> Home\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas-fa-plus\"></i> Add\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\"></i> About\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.protoTypes = {\n    branding: PropTypes.string.isRequired\n}\nexport default Header;\n","import React from 'react'\n\nexport default function About(){\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n       <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound(){\n  return (\n    <div>\n      <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className = \"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div> \n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}